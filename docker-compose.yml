version: '3'
services:
  api:
    build: .
    ports:
      - 3000:3000
    depends_on:
      database:
        condition: service_healthy
    restart: always
    env_file:
      - .env
    environment:
      POSTGRESQL_DATABASE_HOST: database
  database:
    container_name: database
    image: postgres:15
    restart: always
    entrypoint: [ "plsql", "-U", "postgres:postgres",'-c', 'CREATE DATABASE IF NOT EXISTS "gradingApp"']      
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRESQL_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_DATABASE_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data_container:/var/lib/postgresql/data/pgdata
volumes:
  pg_data_container:
